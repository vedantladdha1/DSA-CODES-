#include <stdio.h>
#include<stdlib.h>

struct Node{
    struct Node*next;
    int data;
}*top=NULL;

void push( int x ){
    struct Node*t;
    
    t=(struct Node*)malloc(sizeof(struct Node));
    
    if(t==NULL)
    printf("Stack is FULL\n");
    
    else{
        t->data = x ;
        t->next = top ; 
        top=t;
    }
}

int pop(){
    struct Node*t ;
    int x;
    t=(struct Node*)malloc(sizeof(struct Node));
    
    if(top==NULL)
    printf("Stack is EMPTY\n");
    
    else{
        t=top;
        top=top->next;
        x=t->data;
        free(t);
    }
    return x;
}

void display(){
    struct Node*p;
    p=top;
    while(p!=NULL){
        printf("%d ",p->data);
        p=p->next;
    }
}

int main() {
    int choice;
    int x;

    while (1) {
        printf("\n");
        printf("1. Push element\n");
        printf("2. Pop element\n");
        printf("3. Display stack\n");
        printf("0. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 0:
                exit(0);
            case 1:
                printf("Enter the element to push: ");
                scanf("%d", &x);
                push(x);
                printf("Element %d pushed onto the stack.\n", x);
                break;
            case 2:
                if (top == NULL) {
                    printf("Stack is empty. Cannot pop element.\n");
                } else {
                    int poppedValue = pop();
                    printf("Popped element: %d\n", poppedValue);
                }
                break;
            case 3:
                if (top == NULL) {
                    printf("Stack is empty.\n");
                } else {
                    printf("Stack elements:\n");
                    display();
                }
                break;
            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}
