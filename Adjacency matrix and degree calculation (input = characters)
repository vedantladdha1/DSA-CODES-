#include<stdio.h>
#include<stdlib.h>

int val(char c) {
    switch(c) {
        case 'a': return 0;
        case 'b': return 1;
        case 'c': return 2;
        case 'd': return 3;
        case 'e': return 4;
        case 'f': return 5;
    }
}

void printAdjacencyMatrix(int** arr, int n) {
    printf("\nTHE ADJACENCY MATRIX IS:\n\n");
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            printf("%d ", arr[i][j]);
        }
        printf("\n");
    }
    printf("\n");
}

void calculateDegrees(int** arr, int n) {
    for(int i = 0; i < n; i++) {
        int degree = 0;
        for(int j = 0; j < n; j++) {
            if(arr[i][j] == 1)
                degree++;
        }
        printf("THE DEGREE OF VERTEX '%c' is: %d\n", i + 'a', degree);
    }
    printf("\n");
}

void deallocateMatrix(int** arr, int n) {
    for(int i = 0; i < n; i++) {
        free(arr[i]);
    }
    free(arr);
}

int main() {
    int n, m;

    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter number of edges: ");
    scanf("%d", &m);

    int** arr = (int**)malloc(n * sizeof(int*));
    for(int i = 0; i < n; i++) {
        arr[i] = (int*)malloc(n * sizeof(int));
        for(int j = 0; j < n; j++) {
            arr[i][j] = 0;
        }
    }

    for(int i = 0; i < m; i++) {
        char a, b;
        printf("Enter nodes that are connected: ");
        scanf(" %c %c", &a, &b);
        arr[val(a)][val(b)] = 1;
        arr[val(b)][val(a)] = 1;
    }

    int choice;
    do {
        printf("\n---- MENU ----\n");
        printf("1. Print Adjacency Matrix\n");
        printf("2. Calculate Degrees\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1:
                printAdjacencyMatrix(arr, n);
                break;
            case 2:
                calculateDegrees(arr, n);
                break;
            case 3:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while(choice != 3);

    deallocateMatrix(arr, n);

    return 0;
}
